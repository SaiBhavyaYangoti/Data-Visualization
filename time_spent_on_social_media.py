# -*- coding: utf-8 -*-
"""Time spent on social media.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1euQ6zxwd0FOT-X2bkWGmgdkOlfar0yoa

**Importing Libraries**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""**Data Collection** **and preprocessing**

"""

data = pd.read_csv("/content/drive/MyDrive/Datasets/social_media.csv")
data.head()

data.info()

data.describe()

"""**Data Visualization**

Univariate Analysis
"""

#histplot
plt.figure(figsize=(8,6))
sns.histplot(data['age'],bins=17,kde=True)
plt.title('Age Distribution')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.show()

#pie plot
gender_counts = data['gender'].value_counts()
plt.figure(figsize=(6,6))
plt.pie(gender_counts, labels=gender_counts.index, autopct='%1.1f%%', startangle=140, colors = ['#ff9999','#66b3ff','#99ff99'])

plt.title('Gender Distribution')
plt.show()

#boxplot
plt.figure(figsize=(7,5))
sns.boxplot(data=data, x='income')
plt.title("Income boxplot")
plt.xlabel('Income')
plt.show()

"""**Bivariate analysis**"""

# Bar plot for gender vs time spent
plt.figure(figsize=(8, 6))
sns.barplot(x='gender', y='time_spent', data=data, palette='pastel')
plt.title('Average Time Spent by Gender')
plt.xlabel('Gender')
plt.ylabel('Time Spent (minutes)')
plt.show()

# Scatter plot of age vs time spent
plt.figure(figsize=(8, 6))
sns.scatterplot(x='age', y='time_spent', data=data, hue='gender', palette='Set2')
plt.title('Age vs Time Spent')
plt.xlabel('Age')
plt.ylabel('Time Spent (minutes)')
plt.legend(title='Gender')
plt.show()

#platform vs time spent
#barplot
plt.figure(figsize=(7,5))
sns.barplot(x='platform', y='time_spent', data=data, palette='viridis')
plt.title('Time Spent on Different Platforms')
plt.xlabel('Platform')
plt.ylabel('Time Spent')
plt.show()

# Violin plot for interests vs time spent
plt.figure(figsize=(10, 6))
sns.violinplot(x='interests', y='time_spent', data=data, palette='pastel')
plt.title('Interests vs Time Spent')
plt.xlabel('Interests')
plt.ylabel('Time Spent (minutes)')
plt.xticks(rotation=45)  # Rotate x-axis labels for better readability if needed
plt.show()

#profession vs time spent

plt.figure(figsize=(7,5))
sns.barplot(x='profession', y='time_spent', data=data, palette='viridis')
plt.title('Time Spent by Different profession')
plt.xlabel('Profession')
plt.ylabel('Time Spent')
plt.show()

# Box plot for each platform vs income
plt.figure(figsize=(8, 6))
sns.boxplot(x='platform', y='income', data=data, palette='pastel')
plt.title('Income Distribution by Platform')
plt.xlabel('Platform')
plt.ylabel('Income')
plt.show()

sns.pairplot(data[['age','time_spent','income']])
plt.show()

# Select only numerical columns for correlation matrix
numerical_columns = data.select_dtypes(include=['int', 'float']).columns
df_numeric = data[numerical_columns]

# Calculate correlation matrix
corr_matrix = df_numeric.corr()

# Create a heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', vmin=-1, vmax=1)
plt.title('Correlation Heatmap (Numerical Columns)')
plt.show()

